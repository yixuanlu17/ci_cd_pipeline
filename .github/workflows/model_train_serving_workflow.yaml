name: Train and Deploy ML Model

on:
  push:
    branches:
      - '*'  # Trigger workflow on any branch push for demo purposes

permissions:
  contents: read
  packages: write  # Required for pushing Docker images to GitHub Container Registry

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests with pytest
        run: pytest

  train_model:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Train the ML model
        run: |
          python training.py
          mkdir -p artifacts
          mv /tmp/random_forest_model.pkl ./artifacts/random_forest_model.pkl
          mv /tmp/scaler.pkl ./artifacts/scaler.pkl

      - name: Save the trained model as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: ./artifacts/

  deploy_serving_layer:
    needs: train_model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download trained model artifact
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: ./artifacts/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image for Serving Layer
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/model-serving:latest .

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/model-serving:latest
